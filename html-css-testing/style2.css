.texto1{
  /** font-size: 42px;  tamanho do texto **/
    font-weight: 1000;
    /**font-weight:bold;  para negrito **/
}

.texto2{
    width: 400px;
    border: 2px solid coral;
    text-align: center;
}

.texto3{
    text-indent: 40px;
}

.texto4{
    text-indent: 5px;
}

.texto5{
    letter-spacing: 5px;
}

.texto6{
    line-height: 40px;
}

.lista1{
    list-style: none;
}

.lista2{
    list-style: square;
}

.lista3{
    list-style: lower-latin;
}

.caixa1{
    width: 400px;
    height: 400px;
    border: 2px solid pink;
    background-image: url(cute-dog.jpg);
    /**ackground-repeat: no-repeat;**/
    background-position: 10px 40px;
    /**background-position: center;**/
    /**background-size: 100px 100px;**/
}

.texto-cascata{
    color: blue;
}

.elemento-pai{
    width: 200px;
    height: 200px;
    background-color: violet;
}

.elemento-filho{
    width: inherit;
}

.btn1{
    padding: 10px;
    background-color: rgb(144, 192, 235);
    transition: background-color .8s;
}

.btn1:hover{
    background-color: pink;
}

@keyframes animacao1{
    0%{/**inicio da animação**/
        background-color: #e768f2;
    }
    100%{/**fim da animação**/
        background-color: #68f0f2;
    }
}

.box1{
    width: 200px;
    height: 200px;
    animation: animacao1 1s infinite; /**infinite para ficar repetindo a animação**/
}

@keyframes animacao2{
    0%{/**inicio da animação**/
        background-color: red;
        top: 0;
        left: 0;
    }
    35%{
        top: 0;
        left: 100px;
    }
    70%{
        top: 100px;
        left: 100px;
    }
    100%{/**fim da animação**/
        background-color: #68f0f2;
        top: 100px;
        left: 0px;
    }
}

.box2{
    width: 200px;
    height: 200px;
    animation: animacao2 3s infinite alternate; /**para efeito boomerang**/
    position: relative;
    will-change: left, top;
    margin: 20px;
}

.box3{
    width: 200px;
    height: 200px;
    background-color: #1fffb0;
    transform: scaleY(2);
    margin-top: 100px;
}

.box4{
    width: 200px;
    height: 200px;
    background-color: #fa60fc;
    transform: scaleX(.3);
}

.box5{
    width: 200px;
    height: 200px;
    background-color: plum;
    transform: rotate(35deg);
}

@keyframes girando{
    0%{
        transform: rotate(0deg);
    }
    100%{
        transform: rotate(360deg);
    }
}

.box6{
    width: 200px;
    height: 200px;
    background-color: plum;
    animation: girando 2s infinite ;
}

.box7{
    width: 200px;
    height: 200px;
    background-color: lightgoldenrodyellow;
    transform: translate(30px, 30px); /**horizontal e vertical**/
}

.box8{
    width: 200px;
    height: 200px;
    background-color: lightgreen;
    transform: translateX(30px);  /**somente eixo x **/
}

.box9{
    width: 200px;
    height: 200px;
    background-color: lightgray;
    transform: translateY(50px); /**somente eixo y **/
}

.box10{
    width: 200px;
    height: 200px;
    background-color: lightsalmon;
    transform:skewX(10deg);
}

.box11{
    width: 200px;
    height: 200px;
    background-color: lightsalmon;
    opacity: .5;
}

.container1{
    border: 1px solid darkslateblue;
    /**display: flex;**/
    display: inline-flex;
}

.box12{
    background: pink;
    width: 200px;
    height: 200px;
    border: 1px solid goldenrod;

}

.container2{
    border: 1px solid darkslateblue;
    display: flex;
    flex-direction: row-reverse;     /**row é valor padrão  ...temos row-reverse que é ao contrário da direita para esquerda,  column para organizar em coluna e column-reverse é de baixo para cima**/
    
}

.container3{
    border: 1px solid darkslateblue;
    display: flex;
   flex-wrap: wrap;   /**para não apenas diminuir as caixas mas levá-las para as linhas a baixo**/
}

.container4{
    border: 1px solid darkslateblue;
    display: flex;
    flex-flow: row-reverse wrap ; /** mesmo que flex-wrap**/
}

.container5{
    border: 1px solid darkslateblue;
    display: flex;
    justify-content: flex-end; /** para mudar apenas o alinhamento flex-end/center 
    e space-between para separar por valores iguais porém cola os elemntos, space-around cria espaço de todos os lados a direita e esquerda porém os internos se somam. 
    space-evenly para espaçar todos equalitariamente  **/
    align-items: flex-start; /** alinhar a altura de acordo com o conteúdo na parte de cima, pode-se colocar alinhamento em flex-end ou center**/
}

.container6{
    border: 1px solid darkslateblue;
    display: flex;
    width: 300px;
    height: 300px;
    flex-wrap: wrap;
    align-content: stretch;/** só quando tem quebra de linhas, não funciona sem. para alinhar corretamente entre eles, mas para mensurar de acordo com o conteudo colocar flex-start, 
    também da pra alinhar em baixo com flex-end , e center no meio, pode-se usar os space igual do justify content, funcionando como linha, se for coluna é invertido  
    align item horizontal e justify vertical**/
}

.container7{
    border: 1px solid darkslateblue;
    display: flex;
}

.caixa13:nth-child(1){
    order: 1;
    flex-grow: 1; /**se colocar em todos, distrivbui o tamanho igualmente**/
}
.caixa13:nth-child(2){
    order:2;
    flex-shrink: 0; /**para que ao reduzir a pagina o item não se diminua, se colocarmos valor 1 , 2... ele diminui mais do que os outros**/
}
.caixa13:nth-child(3){
    order: 1;
    flex-basis: 100px; /**tamanho inicial é maior que os demais e acaba controlando a altura tbm**/
}
.caixa13:nth-child(4){
    order: 1;
    align-self:flex-end; /** aceita os valores do align itens**/
}

.container8{
    border: 2px solid darkslateblue;
    display: grid;
    grid-template-columns: 100px 100px 50px;
    grid-gap: 10px;
}

.colunas1{
    column-count:2; /**colocar numero de colunas e dividir paragrafos**/
}